//http://stackoverflow.com/questions/5523109/c-define-class-member-struct-and-return-it-in-a-member-function

#include <iostream>
using namespace std;
class list{
	
	private:
struct node{
	
	int val;
	node* next;
};
node* head;
node* create(int);
node* front(node*,int);
	public:
list()
{
	head=NULL;
}

	
void insert(int);

void del(int);
void ins(int ,int);
void print(void);
};

list::node* list::create(int val)
{
	node* temp=new node;
	temp->val=val;
	temp->next=NULL;
	return temp;
}
void list::insert(int val)
{
	//node*temp=create(val);
	node* temp=new node;
	temp->val=val;
	temp->next=NULL;
	if(head==NULL)
	{
		head=temp;
		//return head;
	}
	node* trav=head,*prev=NULL;
	while(trav!=NULL)
	{
		prev=trav;
		trav=trav->next;
	}
	prev->next=temp;
//	return head;
}

list::node* list::front(node* trav,int val)
{
	node* temp=create(val);
	
	temp->next=trav;
	
	return temp;
}

void list::del(int pos)
{
	if(head==NULL)
		return;
		
	node* temp=head;
	node* prev=new node;
	int i=0;
	while(head!=NULL && i<pos)
	{
		prev=head;
		head=head->next;
		i++;
	}
	prev->next=head->next;
	head=temp;
	//return temp;
	
}

void list::ins(int val,int pos)
{
	if(pos==0)
		{
			head=front(head,val);
			return ;
		}
	int i=0;
	node* temp=head;
	node* prev;
	while(temp!=NULL && i<pos)
	{
		prev=temp;
		temp=temp->next;
		i++;
	}
	prev->next=front(temp,val);
	
}

void list::print(void)
{
	while(head!=NULL)
	{
		cout<<head->val;
		head=head->next;
	}
}

int main() {
	// your code goes here
	list l;
	for(int i=1;i<=5;i++)
	l.ins(i,0);
	l.del(2);
	l.del(2);
	l.print();
	return 0;
}
